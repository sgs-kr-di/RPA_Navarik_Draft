<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="In_StrRobotId" Type="InArgument(x:String)" />
    <x:Property Name="In_StrProcessName" Type="InArgument(x:String)" />
    <x:Property Name="In_StrBasePath" Type="InArgument(x:String)" />
    <x:Property Name="In_StrIoBasePath" Type="InArgument(x:String)" />
    <x:Property Name="Out_DtJobList" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="Out_DtSameFolderList" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="In_StrDirBasePathError" Type="InArgument(x:String)" />
    <x:Property Name="In_StrDirBasePathInput" Type="InArgument(x:String)" />
    <x:Property Name="In_StrDirBasePathOutput" Type="InArgument(x:String)" />
    <x:Property Name="In_StrDirIoBasePathInput" Type="InArgument(x:String)" />
    <x:Property Name="In_StrDirIoBasePathOutput" Type="InArgument(x:String)" />
    <x:Property Name="In_StrDirIoBasePathError" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1219,9894</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="68">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Management.Automation</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="68">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Management.Automation</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="- Process Name : Initialize Folder&#xA;- Author : Hiel.Kim&#xA;- Date : 20.09.21&#xA;- Change History :&#xA;- Description : 입력받은 파라미터를 이용하여, 해당 폴더에 Input, Ouput, Error가 없다면, 폴더를 생성합니다.&#xA;                     BasePath의 Input 폴더의 경우는 파일이 있으면 삭제됩니다.&#xA;&#xA;    * Input    : In_StrBasePath, In_StrIoBasePath, In_StrRobotId, In_StrProcessName&#xA;    * Output : Out_StrDirBasePathError, Out_StrDirBasePathInput, Out_StrDirBasePathOutput, Out_StrDirIoBasePathInput,&#xA;                   Out_StrDirIoBasePathOutput, Out_DtJobList" DisplayName="Initialize Folder" sap:VirtualizedContainerService.HintSize="660,9829" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="BoolDirIoBasePathError" />
      <Variable x:TypeArguments="x:Boolean" Name="BoolDirBasePathInput" />
      <Variable x:TypeArguments="x:Boolean" Name="BoolDirBasePathOutput" />
      <Variable x:TypeArguments="x:Boolean" Name="BoolDirIoBasePathInput" />
      <Variable x:TypeArguments="x:Boolean" Name="BoolDirIoBasePathOutput" />
      <Variable x:TypeArguments="x:Boolean" Name="BoolDirBasePathError" />
      <Variable x:TypeArguments="x:String" Name="StrNavarikRecieptEmail" />
      <Variable x:TypeArguments="x:String" Name="StrNavarikConditionSol" />
      <Variable x:TypeArguments="x:String" Name="StrNavarikRecieptGroupEmail" />
      <Variable x:TypeArguments="x:String" Name="StrNavarikTaskName" />
      <Variable x:TypeArguments="x:String" Name="StrSolVesselName" />
      <Variable x:TypeArguments="x:String" Name="StrNavarikStatus" />
      <Variable x:TypeArguments="x:String" Name="StrNavarikWorksheetNumber" />
      <Variable x:TypeArguments="x:String" Name="StrNavarikWorksheetInputSheetTime" />
      <Variable x:TypeArguments="x:String" Name="StrNavarikWorksheetInputSheetQuantity" />
      <Variable x:TypeArguments="x:String" Name="StrNavarikWorksheetInputSheetQuality" />
      <Variable x:TypeArguments="x:String" Name="StrNavarikRegion" />
      <Variable x:TypeArguments="x:String" Name="StrNavarikWorksheetInputSheetLocation" />
      <Variable x:TypeArguments="x:String" Name="StrNavarikWorksheetInputSheetLocationEmail" />
      <Variable x:TypeArguments="x:String" Name="StrNavarikWorksheetInputSheetPassword" />
      <Variable x:TypeArguments="x:String" Name="StrNavarikWorksheetInputSheetWorkTypeFirst" />
      <Variable x:TypeArguments="x:String" Name="StrNavarikWorksheetInputSheetWorkTypeTwo" />
      <Variable x:TypeArguments="s:DateTime" Name="StrNavarikWorksheetInputSheetETAStart" />
      <Variable x:TypeArguments="s:DateTime" Name="StrNavarikWorksheetInputSheetETAEnd" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Start Initialize Folder_Log message" sap:VirtualizedContainerService.HintSize="598,141" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;[ Initialize Folder - Start ]&quot;]" />
    <ui:BuildDataTable sap2010:Annotation.AnnotationText="Name                         - 파일명&#xA;Result_Count            - 작업대상 건수&#xA;Account - &#xA;Output_FileName    - 출력 파일명&#xA;Processing_Count    - 처리 건수&#xA;Success_Count         - 정상처리 건수&#xA;StartTime                   - 시작 시간&#xA;EndTime                    - 종료 시간&#xA;FolderPath                 - 경로&#xA;SolEmailReciept        - 메일 수신자&#xA;Result                        - 결과&#xA;SolVesselName         - 선명&#xA;Area                            - 지역" DataTable="[Out_DtJobList]" DisplayName="JobList_Build data table" sap:VirtualizedContainerService.HintSize="598,267" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Name&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Result_Count&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Account&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Output_FileName&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Processing_Count&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Success_Count&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;StartTime&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;EndTime&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;FolderPath&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;NavarikEmailReciept&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;NavarikEmailGroupReciept&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;NavarikTaskName&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;STATUS&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;WorkSheetNumber&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;InputSheet_Time&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;InputSheet_Quantity&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;InputSheet_Quality&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;InputSheet_Region&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;InputSheet_RegionEmail&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;InputSheet_RegionPassword&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;InputSheet_WorktypeOne&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;InputSheet_WorktypeTwo&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;InputSheet_ETAStart&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;InputSheet_ETAEnd&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:BuildDataTable>
    <ui:PathExists Resource="{x:Null}" sap2010:Annotation.AnnotationText="Check BasePath의 Input 폴더" DisplayName="BasePath Input_Path Exists" Exists="[BoolDirBasePathInput]" sap:VirtualizedContainerService.HintSize="598,146" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[In_StrDirBasePathInput]" PathType="Folder">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:PathExists>
    <ui:PathExists Resource="{x:Null}" sap2010:Annotation.AnnotationText="Check BasePath의 Output 폴더" DisplayName="BasePath Output_Path Exists" Exists="[BoolDirBasePathOutput]" sap:VirtualizedContainerService.HintSize="598,146" sap2010:WorkflowViewState.IdRef="PathExists_2" Path="[In_StrDirBasePathOutput]" PathType="Folder">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:PathExists>
    <ui:PathExists Resource="{x:Null}" sap2010:Annotation.AnnotationText="Check BasePath의 Error 폴더" DisplayName="BasePath Error_Path Exists" Exists="[BoolDirBasePathOutput]" sap:VirtualizedContainerService.HintSize="598,146" sap2010:WorkflowViewState.IdRef="PathExists_6" Path="[In_StrDirBasePathError]" PathType="Folder">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:PathExists>
    <ui:PathExists Resource="{x:Null}" sap2010:Annotation.AnnotationText="Check IoBasePath의 Input 폴더" DisplayName="IoBasePath Input_Path Exists" Exists="[BoolDirIoBasePathInput]" sap:VirtualizedContainerService.HintSize="598,146" sap2010:WorkflowViewState.IdRef="PathExists_3" Path="[In_StrDirIoBasePathInput]" PathType="Folder">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:PathExists>
    <ui:PathExists Resource="{x:Null}" sap2010:Annotation.AnnotationText="Check IoBasePath의 Output 폴더" DisplayName="IoBasePath Output_Path Exists" Exists="[BoolDirIoBasePathOutput]" sap:VirtualizedContainerService.HintSize="598,146" sap2010:WorkflowViewState.IdRef="PathExists_4" Path="[In_StrDirIoBasePathOutput]" PathType="Folder">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:PathExists>
    <ui:PathExists Resource="{x:Null}" sap2010:Annotation.AnnotationText="Check BasePath의 Output 폴더" DisplayName="BasePath Output_Path Exists" Exists="[BoolDirBasePathOutput]" sap:VirtualizedContainerService.HintSize="598,146" sap2010:WorkflowViewState.IdRef="PathExists_5" Path="[In_StrDirBasePathOutput]" PathType="Folder">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:PathExists>
    <ui:PathExists Resource="{x:Null}" sap2010:Annotation.AnnotationText="Check IoBasePath의 Error 폴더" DisplayName="IoBasePath Error_Path Exists" Exists="[BoolDirIoBasePathError]" sap:VirtualizedContainerService.HintSize="598,146" sap2010:WorkflowViewState.IdRef="PathExists_7" Path="[In_StrDirIoBasePathError]" PathType="Folder">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:PathExists>
    <WriteLine DisplayName="Path_Write Line" sap:VirtualizedContainerService.HintSize="598,90" sap2010:WorkflowViewState.IdRef="WriteLine_7" Text="[&quot;BasePath_Input : &quot; + Environment.NewLine + In_StrDirBasePathInput + Environment.NewLine +&#xA;&quot;BasePath_Output : &quot; + Environment.NewLine + In_StrDirBasePathOutput + Environment.NewLine +&#xA;&quot;BasePath_Error : &quot; + Environment.NewLine + In_StrDirBasePathError + Environment.NewLine +&#xA;&quot;IoBasePath_Input : &quot; + Environment.NewLine + In_StrDirIoBasePathInput + Environment.NewLine +&#xA;&quot;IoBasePath_Output : &quot; + Environment.NewLine + In_StrDirIoBasePathOutput + Environment.NewLine +&#xA;&quot;IoBasePath_Error : &quot; + Environment.NewLine + In_StrDirIoBasePathError]" />
    <If sap2010:Annotation.AnnotationText="Check BasePath의 Input 폴더&#xA;  - True   : Input 폴더의 폴더 및 파일을 모두 삭제&#xA;  - False  : Input 폴더 생성" Condition="[BoolDirBasePathInput]" DisplayName="BasePath Input_If" sap:VirtualizedContainerService.HintSize="598,352" sap2010:WorkflowViewState.IdRef="If_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="DeleteFolderAndFile_Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Framework\DeleteFolderAndFile.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="In_Out_StrDirBasePathInput">[In_StrDirBasePathInput]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Then>
      <If.Else>
        <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="BasePath Input If_Create Folder" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[In_StrDirBasePathInput]" />
      </If.Else>
    </If>
    <If sap2010:Annotation.AnnotationText="Check BasePath의 Output 폴더&#xA;  - True   : None&#xA;  - False  : Output 폴더 생성" Condition="[BoolDirBasePathOutput]" DisplayName="BasePath Output_If" sap:VirtualizedContainerService.HintSize="598,319" sap2010:WorkflowViewState.IdRef="If_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_23">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Then>
      <If.Else>
        <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="BasePath Output If_Create Folder" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_2" Path="[In_StrDirBasePathOutput]" />
      </If.Else>
    </If>
    <If sap2010:Annotation.AnnotationText="Check BasePath의 Output 폴더&#xA;  - True   : None&#xA;  - False  : Output 폴더 생성" Condition="[BoolDirBasePathError]" DisplayName="BasePath Output_If" sap:VirtualizedContainerService.HintSize="598,319" sap2010:WorkflowViewState.IdRef="If_5">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_18">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Then>
      <If.Else>
        <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="BasePath Output If_Create Folder" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_5" Path="[In_StrDirBasePathError]" />
      </If.Else>
    </If>
    <If sap2010:Annotation.AnnotationText="Check IoBasePath의 Input 폴더&#xA;  - True   : IoBasePath의 Input폴더의 파일들을 -&gt; BasePath의 Input 폴더로 이동 (All)&#xA;  - False  : Output 폴더 생성" Condition="[BoolDirIoBasePathInput]" DisplayName="IoBasePath Input_If" sap:VirtualizedContainerService.HintSize="598,605" sap2010:WorkflowViewState.IdRef="If_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="368,351" sap2010:WorkflowViewState.IdRef="ForEach`1_11" Values="[Directory.GetDirectories(In_StrDirIoBasePathInput,&quot;*&quot;)]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="x:String">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:String" Name="DirIoBasePathInput" />
              </ActivityAction.Argument>
              <ui:InvokeCode ContinueOnError="{x:Null}" Code="Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(StrFolderFromIoBaseInput, StrFolderToBaseInput, True)" DisplayName="Copy Dir_Invoke code" sap:VirtualizedContainerService.HintSize="334,165" sap2010:WorkflowViewState.IdRef="InvokeCode_4">
                <ui:InvokeCode.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="StrFolderFromIoBaseInput">[DirIoBasePathInput]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="StrFolderToBaseInput">[In_StrDirBasePathInput + "\" + New DirectoryInfo(DirIoBasePathInput).Name]</InArgument>
                </ui:InvokeCode.Arguments>
              </ui:InvokeCode>
            </ActivityAction>
          </ui:ForEach.Body>
        </ui:ForEach>
      </If.Then>
      <If.Else>
        <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="IoBasePath Input If_Create Folder" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_3" Path="[In_StrDirIoBasePathInput]" />
      </If.Else>
    </If>
    <If Condition="[BoolDirIoBasePathOutput]" DisplayName="IoBasePath Output_If" sap:VirtualizedContainerService.HintSize="598,262" sap2010:WorkflowViewState.IdRef="If_4">
      <If.Then>
        <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_24">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Then>
      <If.Else>
        <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="IoBasePath Output If_Create Folder" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_4" Path="[In_StrDirIoBasePathOutput]" />
      </If.Else>
    </If>
    <If Condition="[BoolDirIoBasePathError]" DisplayName="IoBasePath Error_If" sap:VirtualizedContainerService.HintSize="598,262" sap2010:WorkflowViewState.IdRef="If_6">
      <If.Then>
        <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_25">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Then>
      <If.Else>
        <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="IoBasePath Error If_Create Folder" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_6" Path="[In_StrDirIoBasePathError]" />
      </If.Else>
    </If>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Find Same Folder_For Each" sap:VirtualizedContainerService.HintSize="598,52" sap2010:WorkflowViewState.IdRef="ForEach`1_15" Values="[Directory.GetDirectories(In_StrDirIoBasePathInput,&quot;*&quot;)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="dirIoBasePathInput" />
          </ActivityAction.Argument>
          <Sequence sap:VirtualizedContainerService.HintSize="596,1094" sap2010:WorkflowViewState.IdRef="Sequence_5">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="554,1006" sap2010:WorkflowViewState.IdRef="ForEach`1_26" Values="[Directory.GetDirectories(In_StrDirIoBasePathOutput,&quot;*&quot;)]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="dirIoBasePathOutput_Region" />
                  </ActivityAction.Argument>
                  <Sequence sap:VirtualizedContainerService.HintSize="520,820" sap2010:WorkflowViewState.IdRef="Sequence_6">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="478,732" sap2010:WorkflowViewState.IdRef="ForEach`1_28" Values="[Directory.GetDirectories(dirIoBasePathOutput_Region,&quot;*&quot;)]">
                      <ui:ForEach.Body>
                        <ActivityAction x:TypeArguments="x:String">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:String" Name="dirIoBasePathOutput" />
                          </ActivityAction.Argument>
                          <Sequence sap:VirtualizedContainerService.HintSize="444,546" sap2010:WorkflowViewState.IdRef="Sequence_7">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If Condition="[New DirectoryInfo(dirIoBasePathInput).Name.Equals(New DirectoryInfo(dirIoBasePathOutput).Name)]" sap:VirtualizedContainerService.HintSize="402,458" sap2010:WorkflowViewState.IdRef="If_9">
                              <If.Then>
                                <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="368,276" sap2010:WorkflowViewState.IdRef="ForEach`1_17" Values="[Directory.GetFiles(dirIoBasePathInput, &quot;*.xls*&quot;)]">
                                  <ui:ForEach.Body>
                                    <ActivityAction x:TypeArguments="x:String">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="x:String" Name="ExcelFile" />
                                      </ActivityAction.Argument>
                                      <Throw Exception="[New Exception(&quot;Business_SameFolder&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_2" />
                                    </ActivityAction>
                                  </ui:ForEach.Body>
                                </ui:ForEach>
                              </If.Then>
                              <If.Else>
                                <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_27" />
                              </If.Else>
                            </If>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEach.Body>
                    </ui:ForEach>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="598,3747" sap2010:WorkflowViewState.IdRef="ForEach`1_20" Values="[Directory.GetDirectories(In_StrDirBasePathInput,&quot;*&quot;)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="dirBasePathInput" />
          </ActivityAction.Argument>
          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="564,3561" sap2010:WorkflowViewState.IdRef="ForEach`1_19" Values="[Directory.GetFiles(dirBasePathInput, &quot;*.xls*&quot;)]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="DirBasePathInput" />
                </ActivityAction.Argument>
                <Sequence sap:VirtualizedContainerService.HintSize="530,3375" sap2010:WorkflowViewState.IdRef="Sequence_2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[New DirectoryInfo(DirBasePathInput).Name.Contains(&quot;~&quot;) = true]" sap:VirtualizedContainerService.HintSize="488,360" sap2010:WorkflowViewState.IdRef="If_12">
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="376,178" sap2010:WorkflowViewState.IdRef="Sequence_8">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Throw Exception="[New Exception(&quot;ExcelTempError&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_3" />
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_9">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                  <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="488,2531" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <TryCatch.Try>
                      <Sequence sap:VirtualizedContainerService.HintSize="450,2303" sap2010:WorkflowViewState.IdRef="Sequence_21">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ReadCell Cell="B6" DisplayName="Template Navarik Email_Read Cell" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ReadCell_14" SheetName="Navarik 설정" WorkbookPath="[DirBasePathInput]">
                          <ui:ReadCell.Result>
                            <OutArgument x:TypeArguments="x:String">[StrNavarikRegion]</OutArgument>
                          </ui:ReadCell.Result>
                        </ui:ReadCell>
                        <ui:ReadCell Cell="C6" DisplayName="Template Navarik Email_Read Cell" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ReadCell_22" SheetName="Navarik 설정" WorkbookPath="[DirBasePathInput]">
                          <ui:ReadCell.Result>
                            <OutArgument x:TypeArguments="x:String">[StrNavarikRecieptEmail]</OutArgument>
                          </ui:ReadCell.Result>
                        </ui:ReadCell>
                        <ui:ReadCell Cell="C7" DisplayName="Template Navarik CC_Read Cell" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ReadCell_15" SheetName="Navarik 설정" WorkbookPath="[DirBasePathInput]">
                          <ui:ReadCell.Result>
                            <OutArgument x:TypeArguments="x:String">[StrNavarikRecieptGroupEmail]</OutArgument>
                          </ui:ReadCell.Result>
                        </ui:ReadCell>
                        <ui:ReadCell Cell="C18" DisplayName="Template Navarik Task_Read Cell" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ReadCell_31" SheetName="Navarik 설정" WorkbookPath="[DirBasePathInput]">
                          <ui:ReadCell.Result>
                            <OutArgument x:TypeArguments="x:String">[StrNavarikTaskName]</OutArgument>
                          </ui:ReadCell.Result>
                        </ui:ReadCell>
                        <ui:ReadCell Cell="C19" DisplayName="Template Navarik Status_Read Cell" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ReadCell_17" SheetName="Navarik 설정" WorkbookPath="[DirBasePathInput]">
                          <ui:ReadCell.Result>
                            <OutArgument x:TypeArguments="x:String">[StrNavarikStatus]</OutArgument>
                          </ui:ReadCell.Result>
                        </ui:ReadCell>
                        <ui:ReadCell Cell="C20" DisplayName="Template Navarik Worksheet Number_Read Cell" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ReadCell_18" SheetName="Navarik 설정" WorkbookPath="[DirBasePathInput]">
                          <ui:ReadCell.Result>
                            <OutArgument x:TypeArguments="x:String">[StrNavarikWorksheetNumber]</OutArgument>
                          </ui:ReadCell.Result>
                        </ui:ReadCell>
                        <ui:ReadCell Cell="C10" DisplayName="Template Navarik Worksheet Number_Read Cell" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ReadCell_19" SheetName="Navarik 설정" WorkbookPath="[DirBasePathInput]">
                          <ui:ReadCell.Result>
                            <OutArgument x:TypeArguments="x:String">[StrNavarikWorksheetInputSheetTime]</OutArgument>
                          </ui:ReadCell.Result>
                        </ui:ReadCell>
                        <ui:ReadCell Cell="C11" DisplayName="Template Navarik Worksheet Number_Read Cell" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ReadCell_20" SheetName="Navarik 설정" WorkbookPath="[DirBasePathInput]">
                          <ui:ReadCell.Result>
                            <OutArgument x:TypeArguments="x:String">[StrNavarikWorksheetInputSheetQuantity]</OutArgument>
                          </ui:ReadCell.Result>
                        </ui:ReadCell>
                        <ui:ReadCell Cell="C12" DisplayName="Template Navarik Worksheet Number_Read Cell" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ReadCell_21" SheetName="Navarik 설정" WorkbookPath="[DirBasePathInput]">
                          <ui:ReadCell.Result>
                            <OutArgument x:TypeArguments="x:String">[StrNavarikWorksheetInputSheetQuality]</OutArgument>
                          </ui:ReadCell.Result>
                        </ui:ReadCell>
                        <ui:ReadCell Cell="B25" DisplayName="Template Navarik Worksheet Location_Read Cell" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ReadCell_26" SheetName="Navarik 설정" WorkbookPath="[DirBasePathInput]">
                          <ui:ReadCell.Result>
                            <OutArgument x:TypeArguments="x:String">[StrNavarikWorksheetInputSheetLocation]</OutArgument>
                          </ui:ReadCell.Result>
                        </ui:ReadCell>
                        <ui:ReadCell Cell="C25" DisplayName="Template Navarik Worksheet Location_Read Cell" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ReadCell_27" SheetName="Navarik 설정" WorkbookPath="[DirBasePathInput]">
                          <ui:ReadCell.Result>
                            <OutArgument x:TypeArguments="x:String">[StrNavarikWorksheetInputSheetLocationEmail]</OutArgument>
                          </ui:ReadCell.Result>
                        </ui:ReadCell>
                        <ui:ReadCell Cell="C26" DisplayName="Template Navarik Worksheet Location_Read Cell" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ReadCell_28" SheetName="Navarik 설정" WorkbookPath="[DirBasePathInput]">
                          <ui:ReadCell.Result>
                            <OutArgument x:TypeArguments="x:String">[StrNavarikWorksheetInputSheetPassword]</OutArgument>
                          </ui:ReadCell.Result>
                        </ui:ReadCell>
                        <ui:ReadCell Cell="C15" DisplayName="Template Navarik Worksheet Location_Read Cell" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ReadCell_29" SheetName="Navarik 설정" WorkbookPath="[DirBasePathInput]">
                          <ui:ReadCell.Result>
                            <OutArgument x:TypeArguments="x:String">[StrNavarikWorksheetInputSheetWorkTypeFirst]</OutArgument>
                          </ui:ReadCell.Result>
                        </ui:ReadCell>
                        <ui:ReadCell Cell="C16" DisplayName="Template Navarik Worksheet Location_Read Cell" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ReadCell_34" SheetName="Navarik 설정" WorkbookPath="[DirBasePathInput]">
                          <ui:ReadCell.Result>
                            <OutArgument x:TypeArguments="x:String">[StrNavarikWorksheetInputSheetWorkTypeTwo]</OutArgument>
                          </ui:ReadCell.Result>
                        </ui:ReadCell>
                        <ui:ReadCell Cell="C30" DisplayName="Template Navarik Worksheet ETA Start_Read Cell" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ReadCell_32" SheetName="Navarik 설정" WorkbookPath="[DirBasePathInput]">
                          <ui:ReadCell.Result>
                            <OutArgument x:TypeArguments="s:DateTime">[StrNavarikWorksheetInputSheetETAStart]</OutArgument>
                          </ui:ReadCell.Result>
                        </ui:ReadCell>
                        <ui:ReadCell Cell="C31" DisplayName="Template Navarik Worksheet ETA End_Read Cell" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ReadCell_33" SheetName="Navarik 설정" WorkbookPath="[DirBasePathInput]">
                          <ui:ReadCell.Result>
                            <OutArgument x:TypeArguments="s:DateTime">[StrNavarikWorksheetInputSheetETAEnd]</OutArgument>
                          </ui:ReadCell.Result>
                        </ui:ReadCell>
                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="CommentOut_5">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,455" sap2010:WorkflowViewState.IdRef="Sequence_26">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ReadCell Cell="C31" DisplayName="Template Navarik Worksheet Number_Read Cell" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ReadCell_23" SheetName="Navarik 설정" WorkbookPath="[DirBasePathInput]">
                                <ui:ReadCell.Result>
                                  <OutArgument x:TypeArguments="x:String">[StrNavarikWorksheetInputSheetQuality]</OutArgument>
                                </ui:ReadCell.Result>
                              </ui:ReadCell>
                              <ui:ReadCell Cell="C32" DisplayName="Template Navarik Worksheet Number_Read Cell" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ReadCell_24" SheetName="Navarik 설정" WorkbookPath="[DirBasePathInput]">
                                <ui:ReadCell.Result>
                                  <OutArgument x:TypeArguments="x:String">[StrNavarikWorksheetInputSheetQuality]</OutArgument>
                                </ui:ReadCell.Result>
                              </ui:ReadCell>
                              <ui:ReadCell Cell="C33" DisplayName="Template Navarik Worksheet Number_Read Cell" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ReadCell_25" SheetName="Navarik 설정" WorkbookPath="[DirBasePathInput]">
                                <ui:ReadCell.Result>
                                  <OutArgument x:TypeArguments="x:String">[StrNavarikWorksheetInputSheetQuality]</OutArgument>
                                </ui:ReadCell.Result>
                              </ui:ReadCell>
                            </Sequence>
                          </ui:CommentOut.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:CommentOut>
                        <If Condition="[StrNavarikRecieptEmail.Trim.Equals(&quot;이름을 입력 및 선택하세요.&quot;) = true]" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="If_14">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="376,178" sap2010:WorkflowViewState.IdRef="Sequence_19">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Throw Exception="[New Exception(&quot;ExcelError&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_7" />
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_20">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="454,21" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <Throw Exception="[New Exception(&quot;ExcelError&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_8" />
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&#xA;DirBasePathInput,&#xA;&quot;&quot;,&#xA;&quot;&quot;,&#xA;&quot;&quot;,&#xA;&quot;&quot;,&#xA;&quot;&quot;,&#xA;&quot;&quot;,&#xA;&quot;&quot;,&#xA;&quot;&quot;,&#xA;StrNavarikRecieptEmail,&#xA;StrNavarikRecieptGroupEmail,&#xA;StrNavarikTaskName,&#xA;StrNavarikStatus,&#xA;StrNavarikWorksheetNumber,&#xA;StrNavarikWorksheetInputSheetTime,&#xA;StrNavarikWorksheetInputSheetQuantity,&#xA;StrNavarikWorksheetInputSheetQuality,&#xA;StrNavarikWorksheetInputSheetLocation,&#xA;StrNavarikWorksheetInputSheetLocationEmail,&#xA;StrNavarikWorksheetInputSheetPassword,&#xA;StrNavarikWorksheetInputSheetWorkTypeFirst,&#xA;StrNavarikWorksheetInputSheetWorkTypeTwo,&#xA;StrNavarikWorksheetInputSheetETAStart.ToString(&quot;dd MMM yyyy&quot;),&#xA;StrNavarikWorksheetInputSheetETAEnd.ToString(&quot;dd MMM yyyy&quot;)&#xA;}]" DataTable="[Out_DtJobList]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="488,186" sap2010:WorkflowViewState.IdRef="AddDataRow_2" />
                  <Delay DisplayName="500 Milliseconds_Delay" Duration="[TimeSpan.FromMilliseconds(500)]" sap:VirtualizedContainerService.HintSize="488,90" sap2010:WorkflowViewState.IdRef="Delay_1" />
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="598,52" sap2010:WorkflowViewState.IdRef="CommentOut_2">
      <ui:CommentOut.Body>
        <Sequence DisplayName="무시된 액티비티" sap:VirtualizedContainerService.HintSize="618,798" sap2010:WorkflowViewState.IdRef="Sequence_15">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[Out_DtJobList]" DisplayName="JobDT_For Each Row" sap:VirtualizedContainerService.HintSize="434,301" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="rowDT" />
                </ActivityAction.Argument>
                <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="334,186" sap2010:WorkflowViewState.IdRef="ForEach`1_24" Values="[Directory.GetDirectories(In_StrDirBasePathInput,&quot;*&quot;)]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:String">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:String" Name="dirBasePathInput" />
                      </ActivityAction.Argument>
                      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="486,448" sap2010:WorkflowViewState.IdRef="ForEach`1_23" Values="[Directory.GetFiles(dirBasePathInput, &quot;*.xls*&quot;)]">
                        <ui:ForEach.Body>
                          <ActivityAction x:TypeArguments="x:String">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:String" Name="DirBasePathInput" />
                            </ActivityAction.Argument>
                            <Sequence sap:VirtualizedContainerService.HintSize="450,324" sap2010:WorkflowViewState.IdRef="Sequence_3">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="StrSolRecieptGroupEmail2" />
                                <Variable x:TypeArguments="x:String" Name="StrSolRecieptGroupArea" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If sap2010:Annotation.AnnotationText="DirBasePathInput.Split(&quot;\&quot;c)(5)" Condition="[rowDT(&quot;Name&quot;).ToString.Equals(DirBasePathInput)]" DisplayName="Contain Path_If" sap:VirtualizedContainerService.HintSize="388,213" sap2010:WorkflowViewState.IdRef="If_11">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="473,317" sap2010:WorkflowViewState.IdRef="Sequence_4">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ReadCell Cell="O4" DisplayName="Template SOL GroupEmail_Read Cell" sap:VirtualizedContainerService.HintSize="431,88" sap2010:WorkflowViewState.IdRef="ReadCell_11" SheetName="RPA" WorkbookPath="[DirBasePathInput]">
                                      <ui:ReadCell.Result>
                                        <OutArgument x:TypeArguments="x:String">[StrSolRecieptGroupArea]</OutArgument>
                                      </ui:ReadCell.Result>
                                    </ui:ReadCell>
                                    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="431,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_5">
                                      <ui:MultipleAssign.AssignOperations>
                                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                                            <ui:AssignOperation.To>
                                              <OutArgument x:TypeArguments="x:Object">[rowDT("Area")]</OutArgument>
                                            </ui:AssignOperation.To>
                                            <ui:AssignOperation.Value>
                                              <InArgument x:TypeArguments="x:String">[StrSolRecieptGroupArea]</InArgument>
                                            </ui:AssignOperation.Value>
                                          </ui:AssignOperation>
                                        </scg:List>
                                      </ui:MultipleAssign.AssignOperations>
                                    </ui:MultipleAssign>
                                  </Sequence>
                                </If.Then>
                              </If>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEach.Body>
                      </ui:ForEach>
                    </ActivityAction>
                  </ui:ForEach.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEach>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachRow>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="598,52" sap2010:WorkflowViewState.IdRef="CommentOut_3">
      <ui:CommentOut.Body>
        <Sequence DisplayName="무시된 액티비티" sap:VirtualizedContainerService.HintSize="586,687" sap2010:WorkflowViewState.IdRef="Sequence_16">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="524,414" sap2010:WorkflowViewState.IdRef="TryCatch_2">
            <TryCatch.Try>
              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="334,186" sap2010:WorkflowViewState.IdRef="ForEach`1_29" Values="[Directory.GetDirectories(In_StrDirBasePathInput,&quot;*&quot;)]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="dirBasePathInput" />
                    </ActivityAction.Argument>
                    <Sequence sap:VirtualizedContainerService.HintSize="450,224" sap2010:WorkflowViewState.IdRef="Sequence_11">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Ogc Sol Transfer Excel_Invoke  Workflow File" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Framework\OgcSolTransferExcel.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="In_Out_StrDirBasePathInput">[dirBasePathInput]</InArgument>
                          <InArgument x:TypeArguments="sd:DataTable" x:Key="In_Out_DtJobList">[Out_DtJobList]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
              </ui:ForEach>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Throw Exception="[New Exception(&quot;ExcelDataError&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_5" />
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="598,52" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,319" sap2010:WorkflowViewState.IdRef="Sequence_12">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="388,186" sap2010:WorkflowViewState.IdRef="ForEach`1_16" Values="[Directory.GetDirectories(In_StrDirBasePathInput,&quot;*&quot;)]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="dirBasePathInput" />
                </ActivityAction.Argument>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Ogc Sol Transfer Excel_Invoke  Workflow File" sap:VirtualizedContainerService.HintSize="367,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Framework\OgcSolTransferExcel.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="In_Out_StrDirBasePathInput">[dirBasePathInput]</InArgument>
                    <InArgument x:TypeArguments="sd:DataTable" x:Key="In_Out_DtJobList">[Out_DtJobList]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="598,52" sap2010:WorkflowViewState.IdRef="CommentOut_4">
      <ui:CommentOut.Body>
        <Sequence DisplayName="무시된 액티비티" sap:VirtualizedContainerService.HintSize="450,319" sap2010:WorkflowViewState.IdRef="Sequence_17">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="388,186" sap2010:WorkflowViewState.IdRef="ForEach`1_18" Values="[Directory.GetDirectories(In_StrDirBasePathInput,&quot;*&quot;)]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="dirBasePathInput" />
                </ActivityAction.Argument>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ExportPDF.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Web\ExportPDF.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="In_StrDirPdf" />
                    <InArgument x:TypeArguments="x:String" x:Key="In_StrDirFull">[dirBasePathInput]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_Out_StrDirBasePathInput">[dirBasePathInput]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[Out_DtJobList]" DisplayName="JobDT_For Each Row" sap:VirtualizedContainerService.HintSize="598,834" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="rowDT" />
          </ActivityAction.Argument>
          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="BasePathDirectory_For Each" sap:VirtualizedContainerService.HintSize="525,717" sap2010:WorkflowViewState.IdRef="ForEach`1_13" Values="[Directory.GetDirectories(In_StrDirBasePathInput,&quot;*&quot;)]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="dirFolderBasePathInput" />
                </ActivityAction.Argument>
                <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="491,531" sap2010:WorkflowViewState.IdRef="ForEach`1_30" Values="[Directory.GetFiles(dirFolderBasePathInput, &quot;*.xls*&quot;)]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:Object">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:Object" Name="DirBasePathInput" />
                      </ActivityAction.Argument>
                      <If sap2010:Annotation.AnnotationText="DirBasePathInput.Split(&quot;\&quot;c)(5)" Condition="[rowDT(&quot;Name&quot;).ToString.Contains(New DirectoryInfo(dirFolderBasePathInput).Name)]" DisplayName="Contain Path_If" sap:VirtualizedContainerService.HintSize="457,345" sap2010:WorkflowViewState.IdRef="If_8">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="423,132" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                            <ui:MultipleAssign.AssignOperations>
                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Object">[rowDT("Name")]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Object">[DirBasePathInput]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Object">[rowDT("FolderPath")]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Object">[dirFolderBasePathInput]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                              </scg:List>
                            </ui:MultipleAssign.AssignOperations>
                          </ui:MultipleAssign>
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_22" />
                        </If.Else>
                      </If>
                    </ActivityAction>
                  </ui:ForEach.Body>
                </ui:ForEach>
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
        </ActivityAction>
      </ui:ForEachRow.Body>
    </ui:ForEachRow>
    <ui:LogMessage DisplayName="End Initialize Folder_Log message" sap:VirtualizedContainerService.HintSize="598,141" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;[ Initialize Folder - End ]&quot;]" />
  </Sequence>
</Activity>